%YAML 1.2
---
name: 'modstag:var'
display: false
scope: source.modstag

variables:
  modstag_valueType: 'unsigned\<\<int4|unsigned\<\<int8|unsigned\<\<int16|unsigned\<\<int32|unsigned\<\<int64|unsigned\<\<int128|unsigned\<\<int256|
    |signed\<\<int4|signed\<\<int8|signed\<\<int16|signed\<\<int32|signed\<\<int64|signed\<\<int128|signed\<\<int256|
    |unsigned\<\<dec8|unsigned\<\<dec16|unsigned\<\<dec32|unsigned\<\<dec64|unsigned\<\<dec128|unsigned\<\<dec256|
    |signed\<\<dec8|signed\<\<dec16|signed\<\<dec32|signed\<\<dec64|signed\<\<dec128|signed\<\<dec256|
    |unsigned\<\<bdec32|unsigned\<\<bdec64|unsigned\<\<bdec128|unsigned\<\<bdec256|
    |signed\<\<bdec32|signed\<\<bdec64|signed\<\<bdec128|signed\<\<bdec256|
    |single|double|extended|quadruple|octuple|doubledec'

contexts:
  prototype:
    - match: '//tips:'
      scope: minecraft.color.gray
      push:
        - meta_scope: minecraft.color.gray
        - meta_include_prototype: false
        - match: ':end//'
          scope: minecraft.color.gray
          pop: 1
    - match: '#tips:.*$\n?'
      scope: minecraft.color.gray
  main:
    - include: prototype
  math.end:
    - match: '>'
      scope: minecraft.color.gold
      pop: 1
  math.notNextError:
    - match: '\n'
      scope: modstag.color.error-key
      set:
        - clear_scopes: 1
  math.notNextError-unsignedNumber:
    - match: '\n'
      set:
        - include: modstag-config.end
        - match: '[0-9]|\.'
          scope: modstag.color.error-key
          set:
            - match: '[0-9]'
              scope: modstag.color.error-key
            - clear_scopes: 1
  math.notNext:
    - match: '\n'
      scope: minecraft.color.textWhite
      set:
        - clear_scopes: 1
  math:
    - meta_include_prototype: false
    - match: '\(|\)'
      scope: minecraft.color.red
    - match: '((''(%s)'')(==))?(\-?)(\d+((\.)\d+)?([Ee]\d+)?)'
      captures:
        1: minecraft.color.gray
        2: minecraft.color.aqua
        3: minecraft.color.purple
        4: minecraft.color.red
        5: minecraft.color.red
        6: minecraft.color.green
        7: minecraft.color.green
        8: minecraft.color.gray
        9: minecraft.color.green
      set:
        - match: '(\/)([0]+([1-9](\d+)?((\.)\d+)?|(\.)([0]+)?[1-9](\d+)?)([Ee][\+\-]?\d+)?)'
          scope: minecraft.color.green
          captures:
            1: minecraft.color.red
            6: minecraft.color.gray
            7: minecraft.color.gray
        - match: '(\/\([0]+(\.[0]+)?\))|(\/[0]+(\.[0]+)?)'
          scope: modstag.color.error-key
        - match: '([\+\-\*\/\^]|\<\<|\>\>|\.\.)?(\(\-?(\d+((\.)\d+)?([Ee][\+\-]?\d+)?|(%s))\))'
          captures: 
            1: minecraft.color.red
            2: minecraft.color.red
            3: minecraft.color.green
            4: minecraft.color.green
            5: minecraft.color.gray
            6: minecraft.color.green
            7: minecraft.color.yellow
        - match: '([\+\-\*\/\^]|\<\<|\>\>|\.\.)(\d+((\.)\d+)?([Ee][\+\-]?\d+)?|(%s))'
          captures:
            1: minecraft.color.red
            2: minecraft.color.green
            3: minecraft.color.green
            4: minecraft.color.gray
            5: minecraft.color.green
            6: minecraft.color.yellow
        - include: math.end
        - match: '[^\s\n]'
          scope: modstag.color.error-key
    - include: math.end